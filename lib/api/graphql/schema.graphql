type Pool {
  tenant: String!
  poolName: String!
  segmentId: String
  pinpointApplicationId: String
}

type Query {
  listPools: [Pool]
  listRecipients: [Recipient]
}

type Result {
  id: ID!
  status: ResultStatus!
}

type Recipient {
  tenant: String!
  address: String!
  endpointId: String
  pools: [String]
}

enum ResultStatus {
  PENDING
  COMPLETE
  ERROR
}

input ProcessTestResultInput {
  poolName: String!
  testResult: String!
}

input RecipientInput {
  address: String!
  pools: [String]
}

type Mutation {
  processTestResult(input: ProcessTestResultInput!): Result
  addRecipient(input: RecipientInput!): Recipient
}
